# -*- coding:utf-8 -*-
# @Author: Leva
"""
@project: PythonStudy
@time:
@detail:
@else: Don't stop learning!!!
"""

'''
# 1、将一个列表的数据复制到另一个列表中
list_a = ['a','b','c']
list_b = ['1','2','3']
list_b.extend(list_a)
print(list_b)

# 2、一球从100m高度自由落下，每次落地后反跳回原高度的一半，再落下，那么它在第10次落地时，共经过多少米？第10次反弹多高？
a = [100]  #每个‘反弹落地’过程经过的路程，第1次只有落地（100米）
h = 100  #每个‘反弹落地’过程，反弹的高度，第1次为100米
print('第1次从%s米高落地，走过%s米，之后又反弹至%s米。' % (h, a[0], h/2))
for i in range(2,11):  #第1次已初始化，再循环9次
    a.append(h)  #先计算路程，再高度减半，因为一个‘反弹落地’为2个高度
    h = h / 2
print('第%s次从%s米高落地，共走过%s米，之后又反弹至%s米。' % (i, h, sum(a), h / 2))


# 3、猴子吃桃问题:猴子第一天摘下若干个桃子， 当即吃了一半， 还不过瘾，又多吃了一个；
# 第二天早上又将剩下的桃子吃掉一半，又多吃了一个；以后每天早上都吃了前一天剩下的一半零一个；
# 到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。
# 这题得倒着推。第10天还没吃，就剩1个，说明第9天吃完一半再吃1个还剩1个，假设第9天还没吃之前有桃子p个，
# 可得：p * 1/2 - 1 = 1，可得 p = 4。以此类推，即可手算出。
# 代码思路为：第10天还没吃之前的桃子数量初始化 p = 1，之后从9至1循环9次，根据上述公式反推为 p = (p+1) * 2 
# 可得第1天还没吃之前的桃子数量。
#方法一
p = 1
print('第10天吃之前就剩1个桃子')
for i in range(1, 10):
    p = (p+1) * 2
    print('第%s天吃之前还有%s个桃子' % (i, p))
print('第1天共摘了%s个桃子' % p)

#方法二
p = 1
print('第10天吃之前就剩1个桃子')
for i in range(9, 0, -1):
    p = (p+1) * 2
    print('第%s天吃之前还有%s个桃子' % (i, p))
print('第1天共摘了%s个桃子' % p)
'''
# 4、两个乒乓球队进行比赛，各出3人。甲队为a、b. c三人，乙队为x、y、z三人。已抽签决定比赛名单。有人向队员打听比赛的名单。
# a说他不和x比，c说他不和x、z比，请编程序找出3队赛手的名单。
import itertools

for i in itertools.permutations('xyz'):
    if i[0] != 'x' and i[2] != 'x' and i[2] != 'z':
        print('a vs %s, b vs %s, c vs %s' % (i[0], i[1], i[2]))